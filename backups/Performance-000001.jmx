<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="GraphQL API" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="hostName" elementType="Argument">
            <stringProp name="Argument.name">hostName</stringProp>
            <stringProp name="Argument.value">in01-dev277.pvi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userName" elementType="Argument">
            <stringProp name="Argument.name">userName</stringProp>
            <stringProp name="Argument.value">t1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">password1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userName2" elementType="Argument">
            <stringProp name="Argument.name">userName2</stringProp>
            <stringProp name="Argument.value">t2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Username_readOnly" elementType="Argument">
            <stringProp name="Argument.name">Username_readOnly</stringProp>
            <stringProp name="Argument.value">AR</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="service_path" elementType="Argument">
            <stringProp name="Argument.name">service_path</stringProp>
            <stringProp name="Argument.value">/service/graphql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token_parallel" elementType="Argument">
            <stringProp name="Argument.name">token_parallel</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Bearer Token Parallel" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bearer Token Call" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${userName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ap-dashboard-password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/idp/connect/token?idp-tenant=onbase</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access Token - JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token_parallel</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(token_parallel, ${token_parallel})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Parallel Run Grid Validation" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Grid Validation(LineDistribution) Parallel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;request&quot;:{&quot;validationInputParameters&quot;:{&quot;id&quot;:&quot;101&quot;,&quot;docId&quot;:&quot;101&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;subTotal&quot;,&quot;value&quot;:&quot;500.00&quot;}],&quot;lines&quot;:[{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812&quot;,&quot;description&quot;:&quot;Box of cups - updated&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;TOS&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;abcde&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812&quot;,&quot;description&quot;:&quot;Box of cups - updated&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;TOS&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;abcde&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;200.00&quot;}]}]}}},&quot;query&quot;:&quot;query ($request: ValidateInvoiceLineDistributionRequestInput) {\n  validateInvoiceLineDistribution(request: $request) {\n    isSuccess\n    error\n    validationResult {\n      isSuccess\n      errors {\n        severity\n        errorCode\n        messageParams {\n          key\n          value\n        }\n      }\n      lines {\n        isSuccess\n        errors {\n          severity\n          errorCode\n          messageParams {\n            key\n            value\n          }\n        }\n        fields {\n          key\n          value {\n            isSuccess\n            errors {\n              severity\n              errorCode\n              messageParams {\n                key\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token_parallel)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">success</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">2</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">success</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">error</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;errors&quot;: </stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3392903">null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">error</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="656299023">&quot;validationResult&quot;: {
                &quot;isSuccess&quot;: true,
                &quot;errors&quot;: null,
                &quot;lines&quot;: [
                    {
                        &quot;isSuccess&quot;: true,
                        &quot;errors&quot;: null,
                        &quot;fields&quot;: [
                            {
                                &quot;key&quot;: &quot;glAccount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;companyCode&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;costCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;profitCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineTax&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineAmount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            }
                        ]
                    },
                    {
                        &quot;isSuccess&quot;: true,
                        &quot;errors&quot;: null,
                        &quot;fields&quot;: [
                            {
                                &quot;key&quot;: &quot;glAccount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;companyCode&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;costCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;profitCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineTax&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineAmount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            }
                        ]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Parallel Run my Invoices API" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="myInvoices API Parallel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;{\n  myInvoices {\n    isSuccess\n    invoices {\n      id\n      docId\n      approvalStatus\n      headers {\n        key\n        value\n      }\n    }\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token_parallel)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Parallel Run invoiceDetails API" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="invoiceDetails API Parallel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;id&quot;:&quot;106&quot;},&quot;query&quot;:&quot;query ($id: String) {\n  invoiceDetails(id: $id) {\n    isSuccess\n    error\n    invoices {\n      id\n      lines {\n        glFields {\n          key\n          value {\n            code\n            description\n          }\n        }\n        nonGlFields {\n          key\n          value\n        }\n      }\n      actionHistory {\n        type\n        date\n        user\n        reason\n        comment\n      }\n    }\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token_parallel)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Parallel Run postComment API" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="postComment API Parallel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;comment&quot;:{&quot;comment&quot;:&quot;This is a comment&quot;,&quot;itemId&quot;:&quot;106&quot;}},&quot;query&quot;:&quot;mutation ($comment: CommentModelInput) {\n  postComment(comment: $comment) {\n    isSuccess\n    error\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token_parallel)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="General API" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bearer Token Call" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">ap-dashboard-password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/idp/connect/token?idp-tenant=onbase</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access Token - JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="myInvoices API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;{\n  myInvoices {\n    isSuccess\n    invoices {\n      id\n      docId\n      approvalStatus\n      headers {\n        key\n        value\n      }\n    }\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${service_path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">isSuccess</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">isSuccess</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="invoiceDetails API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;id&quot;:&quot;106&quot;},&quot;query&quot;:&quot;query ($id: String) {\n  invoiceDetails(id: $id) {\n    isSuccess\n    error\n    invoices {\n      id\n      lines {\n        glFields {\n          key\n          value {\n            code\n            description\n          }\n        }\n        nonGlFields {\n          key\n          value\n        }\n      }\n      actionHistory {\n        type\n        date\n        user\n        reason\n        comment\n      }\n    }\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${service_path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">isSuccess</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">isSuccess</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">id</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;id&quot;: &quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48631">106</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">id</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Grid Validation(LineDistribution)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;request&quot;:{&quot;validationInputParameters&quot;:{&quot;id&quot;:&quot;101&quot;,&quot;docId&quot;:&quot;101&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;subTotal&quot;,&quot;value&quot;:&quot;500.00&quot;}],&quot;lines&quot;:[{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812&quot;,&quot;description&quot;:&quot;Box of cups - updated&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;TOS&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;abcde&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812&quot;,&quot;description&quot;:&quot;Box of cups - updated&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;TOS&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;abcde&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;200.00&quot;}]}]}}},&quot;query&quot;:&quot;query ($request: ValidateInvoiceLineDistributionRequestInput) {\n  validateInvoiceLineDistribution(request: $request) {\n    isSuccess\n    error\n    validationResult {\n      isSuccess\n      errors {\n        severity\n        errorCode\n        messageParams {\n          key\n          value\n        }\n      }\n      lines {\n        isSuccess\n        errors {\n          severity\n          errorCode\n          messageParams {\n            key\n            value\n          }\n        }\n        fields {\n          key\n          value {\n            isSuccess\n            errors {\n              severity\n              errorCode\n              messageParams {\n                key\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${service_path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">success</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">success</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">error</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;errors&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3392903">null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">error</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="656299023">&quot;validationResult&quot;: {
                &quot;isSuccess&quot;: true,
                &quot;errors&quot;: null,
                &quot;lines&quot;: [
                    {
                        &quot;isSuccess&quot;: true,
                        &quot;errors&quot;: null,
                        &quot;fields&quot;: [
                            {
                                &quot;key&quot;: &quot;glAccount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;companyCode&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;costCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;profitCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineTax&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineAmount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            }
                        ]
                    },
                    {
                        &quot;isSuccess&quot;: true,
                        &quot;errors&quot;: null,
                        &quot;fields&quot;: [
                            {
                                &quot;key&quot;: &quot;glAccount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;companyCode&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;costCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;profitCenter&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineTax&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            },
                            {
                                &quot;key&quot;: &quot;lineAmount&quot;,
                                &quot;value&quot;: {
                                    &quot;isSuccess&quot;: true,
                                    &quot;errors&quot;: null
                                }
                            }
                        ]</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="postComment API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;comment&quot;:{&quot;comment&quot;:&quot;This is a comment&quot;,&quot;itemId&quot;:&quot;106&quot;}},&quot;query&quot;:&quot;mutation ($comment: CommentModelInput) {\n  postComment(comment: $comment) {\n    isSuccess\n    error\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${service_path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">isSuccess</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">isSuccess</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bearer Token Call User 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${userName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ap-dashboard-password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/idp/connect/token?idp-tenant=onbase</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access Token - JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bearer Token Call User 2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${userName2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ap-dashboard-password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/idp/connect/token?idp-tenant=onbase</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access Token - JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token_user2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLines API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;id&quot;:&quot;106&quot;,&quot;lines&quot;:[{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812345&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812345&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812345&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812345&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812345&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09812345&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]},{&quot;glFields&quot;:[{&quot;key&quot;:&quot;glAccount&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;09&quot;,&quot;description&quot;:&quot;GL Random Account&quot;}},{&quot;key&quot;:&quot;companyCode&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;08123&quot;,&quot;description&quot;:&quot;Contoso Limited&quot;}},{&quot;key&quot;:&quot;costCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;07675&quot;,&quot;description&quot;:&quot;123 Hare&quot;}},{&quot;key&quot;:&quot;profitCenter&quot;,&quot;value&quot;:{&quot;code&quot;:&quot;06654&quot;,&quot;description&quot;:&quot;Baker street&quot;}}],&quot;nonGlFields&quot;:[{&quot;key&quot;:&quot;lineTax&quot;,&quot;value&quot;:&quot;200.00&quot;},{&quot;key&quot;:&quot;lineAmount&quot;,&quot;value&quot;:&quot;300.00&quot;}]}]},&quot;query&quot;:&quot;mutation ($id: String, $lines: [InvoiceLineInput]) {\n  updateInvoiceLines(id: $id, lines: $lines) {\n    isSuccess\n    error\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">isSuccess</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number"></stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">isSuccess</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="unlockInvoice API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;id&quot;:&quot;106&quot;},&quot;query&quot;:&quot;mutation ($id: String) {\n  unlockInvoice(id: $id) {\n    isSuccess\n    error\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="approvalAction API for approve invoice(User 1)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;approvalActionInput&quot;:{&quot;type&quot;:&quot;APPROVE&quot;,&quot;itemId&quot;:&quot;106&quot;,&quot;reason&quot;:&quot;Good&quot;,&quot;comment&quot;:&quot;Looks Ok by T1&quot;}},&quot;query&quot;:&quot;mutation ($approvalActionInput: ApprovalActionInput) {\n  approvalAction(action: $approvalActionInput) {\n    isSuccess\n    error\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">isSuccess</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number"></stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">isSuccess</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="approvalAction API for approve invoice(User 2)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;approvalActionInput&quot;:{&quot;type&quot;:&quot;APPROVE&quot;,&quot;itemId&quot;:&quot;106&quot;,&quot;reason&quot;:&quot;Good&quot;,&quot;comment&quot;:&quot;Looks Ok by T2&quot;}},&quot;query&quot;:&quot;mutation ($approvalActionInput: ApprovalActionInput) {\n  approvalAction(action: $approvalActionInput) {\n    isSuccess\n    error\n  }\n}\n&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${service_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token_user2}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">isSuccess</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;isSuccess&quot;: </stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number"></stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">isSuccess</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="teardown 1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;workItems&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;106&quot;,&#xd;
      &quot;type&quot;: &quot;Document&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apiserver/onbase/workflow/ad-hoc-tasks/129/execute?queueId=104</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">isStatus</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;status&quot;: &quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number"></stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="601036331">Completed</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">isStatus</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="teardown 2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;workItems&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;106&quot;,&#xd;
       &quot;type&quot;: &quot;Document&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostName}</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apiserver/onbase/workflow/ad-hoc-tasks/128/execute?queueId=104</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager token" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setResponseData(groovy.json.JsonOutput.prettyPrint(prev.getResponseDataAsString()))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">isStatus</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;status&quot;: &quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">No Label found</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number"></stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="601036331">Completed</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">isStatus</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Extra API" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
